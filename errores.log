==11236== Memcheck, a memory error detector
==11236== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11236== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==11236== Command: ./client
==11236== Parent PID: 10638
==11236== 
==11236== Thread 34:
==11236== Invalid read of size 8
==11236==    at 0x176920: NPC::render(Camera&) (NPC.cpp:82)
==11236==    by 0x171908: EntityManager::renderEntities(Camera&) (EntityManager.cpp:109)
==11236==    by 0x186081: Renderer::run() (Renderer.cpp:47)
==11236==    by 0x1873A9: void std::__invoke_impl<void, void (Thread::*)(), Thread*>(std::__invoke_memfun_deref, void (Thread::*&&)(), Thread*&&) (invoke.h:73)
==11236==    by 0x187067: std::__invoke_result<void (Thread::*)(), Thread*>::type std::__invoke<void (Thread::*)(), Thread*>(void (Thread::*&&)(), Thread*&&) (invoke.h:95)
==11236==    by 0x1878EA: decltype (__invoke((_S_declval<0ul>)(), (_S_declval<1ul>)())) std::thread::_Invoker<std::tuple<void (Thread::*)(), Thread*> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (thread:234)
==11236==    by 0x18788B: std::thread::_Invoker<std::tuple<void (Thread::*)(), Thread*> >::operator()() (thread:243)
==11236==    by 0x18785B: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (Thread::*)(), Thread*> > >::_M_run() (thread:186)
==11236==    by 0x719E6DE: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==11236==    by 0x57CE6DA: start_thread (pthread_create.c:463)
==11236==    by 0x77A3A3E: clone (clone.S:95)
==11236==  Address 0x1daf3138 is 8 bytes after a block of size 256 alloc'd
==11236==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11236==    by 0x17CCBF: __gnu_cxx::new_allocator<SDL_Rect>::allocate(unsigned long, void const*) (new_allocator.h:111)
==11236==    by 0x17CBD9: std::allocator_traits<std::allocator<SDL_Rect> >::allocate(std::allocator<SDL_Rect>&, unsigned long) (alloc_traits.h:436)
==11236==    by 0x17CAD7: std::_Vector_base<SDL_Rect, std::allocator<SDL_Rect> >::_M_allocate(unsigned long) (stl_vector.h:172)
==11236==    by 0x17C6C5: void std::vector<SDL_Rect, std::allocator<SDL_Rect> >::_M_realloc_insert<SDL_Rect>(__gnu_cxx::__normal_iterator<SDL_Rect*, std::vector<SDL_Rect, std::allocator<SDL_Rect> > >, SDL_Rect&&) (vector.tcc:406)
==11236==    by 0x17C5BB: void std::vector<SDL_Rect, std::allocator<SDL_Rect> >::emplace_back<SDL_Rect>(SDL_Rect&&) (vector.tcc:105)
==11236==    by 0x17C4DE: SpriteClipCreator::SpriteClipCreator(unsigned short, unsigned short, unsigned short, unsigned short, std::vector<SDL_Rect, std::allocator<SDL_Rect> >&) (SpriteClipCreator.cpp:11)
==11236==    by 0x178E29: Spyder::Spyder(SDL_Renderer*, unsigned int, unsigned short, unsigned short) (Spyder.cpp:13)
==11236==    by 0x170CE4: EntityManager::addNPC(NPCType, unsigned int, unsigned short, unsigned short) (EntityManager.cpp:18)
==11236==    by 0x184EAD: ModelController::handle(std::vector<unsigned int, std::allocator<unsigned int> >&) (ModelController.cpp:53)
==11236==    by 0x184D0C: ModelController::run(std::atomic<bool>&) (ModelController.cpp:34)
==11236==    by 0x185F48: Renderer::run() (Renderer.cpp:33)
==11236== 
==11236== Invalid read of size 8
==11236==    at 0x176924: NPC::render(Camera&) (NPC.cpp:82)
==11236==    by 0x171908: EntityManager::renderEntities(Camera&) (EntityManager.cpp:109)
==11236==    by 0x186081: Renderer::run() (Renderer.cpp:47)
==11236==    by 0x1873A9: void std::__invoke_impl<void, void (Thread::*)(), Thread*>(std::__invoke_memfun_deref, void (Thread::*&&)(), Thread*&&) (invoke.h:73)
==11236==    by 0x187067: std::__invoke_result<void (Thread::*)(), Thread*>::type std::__invoke<void (Thread::*)(), Thread*>(void (Thread::*&&)(), Thread*&&) (invoke.h:95)
==11236==    by 0x1878EA: decltype (__invoke((_S_declval<0ul>)(), (_S_declval<1ul>)())) std::thread::_Invoker<std::tuple<void (Thread::*)(), Thread*> >::_M_invoke<0ul, 1ul>(std::_Index_tuple<0ul, 1ul>) (thread:234)
==11236==    by 0x18788B: std::thread::_Invoker<std::tuple<void (Thread::*)(), Thread*> >::operator()() (thread:243)
==11236==    by 0x18785B: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (Thread::*)(), Thread*> > >::_M_run() (thread:186)
==11236==    by 0x719E6DE: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==11236==    by 0x57CE6DA: start_thread (pthread_create.c:463)
==11236==    by 0x77A3A3E: clone (clone.S:95)
==11236==  Address 0x1daf3130 is 0 bytes after a block of size 256 alloc'd
==11236==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11236==    by 0x17CCBF: __gnu_cxx::new_allocator<SDL_Rect>::allocate(unsigned long, void const*) (new_allocator.h:111)
==11236==    by 0x17CBD9: std::allocator_traits<std::allocator<SDL_Rect> >::allocate(std::allocator<SDL_Rect>&, unsigned long) (alloc_traits.h:436)
==11236==    by 0x17CAD7: std::_Vector_base<SDL_Rect, std::allocator<SDL_Rect> >::_M_allocate(unsigned long) (stl_vector.h:172)
==11236==    by 0x17C6C5: void std::vector<SDL_Rect, std::allocator<SDL_Rect> >::_M_realloc_insert<SDL_Rect>(__gnu_cxx::__normal_iterator<SDL_Rect*, std::vector<SDL_Rect, std::allocator<SDL_Rect> > >, SDL_Rect&&) (vector.tcc:406)
==11236==    by 0x17C5BB: void std::vector<SDL_Rect, std::allocator<SDL_Rect> >::emplace_back<SDL_Rect>(SDL_Rect&&) (vector.tcc:105)
==11236==    by 0x17C4DE: SpriteClipCreator::SpriteClipCreator(unsigned short, unsigned short, unsigned short, unsigned short, std::vector<SDL_Rect, std::allocator<SDL_Rect> >&) (SpriteClipCreator.cpp:11)
==11236==    by 0x178E29: Spyder::Spyder(SDL_Renderer*, unsigned int, unsigned short, unsigned short) (Spyder.cpp:13)
==11236==    by 0x170CE4: EntityManager::addNPC(NPCType, unsigned int, unsigned short, unsigned short) (EntityManager.cpp:18)
==11236==    by 0x184EAD: ModelController::handle(std::vector<unsigned int, std::allocator<unsigned int> >&) (ModelController.cpp:53)
==11236==    by 0x184D0C: ModelController::run(std::atomic<bool>&) (ModelController.cpp:34)
==11236==    by 0x185F48: Renderer::run() (Renderer.cpp:33)
==11236== 
==11236== 
==11236== HEAP SUMMARY:
==11236==     in use at exit: 6,627,187 bytes in 31,760 blocks
==11236==   total heap usage: 1,133,359 allocs, 1,101,599 frees, 1,448,288,714 bytes allocated
==11236== 
==11236== LEAK SUMMARY:
==11236==    definitely lost: 0 bytes in 0 blocks
==11236==    indirectly lost: 0 bytes in 0 blocks
==11236==      possibly lost: 0 bytes in 0 blocks
==11236==    still reachable: 528 bytes in 2 blocks
==11236==                       of which reachable via heuristic:
==11236==                         length64           : 4,832 bytes in 80 blocks
==11236==                         newarray           : 2,096 bytes in 51 blocks
==11236==         suppressed: 6,543,995 bytes in 31,084 blocks
==11236== Reachable blocks (those to which a pointer was found) are not shown.
==11236== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==11236== 
==11236== For counts of detected and suppressed errors, rerun with: -v
==11236== ERROR SUMMARY: 16 errors from 2 contexts (suppressed: 2216035 from 728)
